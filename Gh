import requests
import json

# Azure OpenAI credentials
api_key = "your-azure-api-key"
endpoint = "https://your-resource-name.openai.azure.com/"
deployment_name = "your-deployment-name"  # The name of your deployed embedding model

def get_embeddings_azure(texts, api_key, endpoint, deployment_name):
    """
    Fetch embeddings using Azure OpenAI Service.

    Args:
        texts (list): List of strings to embed.
        api_key (str): Azure OpenAI API key.
        endpoint (str): Azure OpenAI endpoint.
        deployment_name (str): Name of the embedding model deployment.

    Returns:
        list: A list of embedding vectors.
    """
    if not isinstance(texts, list):
        texts = [texts]

    url = f"{endpoint}openai/deployments/{deployment_name}/embeddings?api-version=2023-03-15-preview"
    headers = {
        "Content-Type": "application/json",
        "api-key": api_key,
    }

    payload = {
        "input": texts
    }

    try:
        # Make the POST request to the Azure OpenAI embeddings endpoint
        response = requests.post(url, headers=headers, json=payload)
        response.raise_for_status()  # Raise exception for HTTP errors

        # Extract embeddings from the response
        result = response.json()
        embeddings = [item["embedding"] for item in result["data"]]
        return embeddings

    except requests.exceptions.RequestException as e:
        print(f"Error fetching embeddings from Azure: {e}")
        return None

# Example Usage
texts = ["Azure OpenAI provides embeddings.", "Embeddings represent text as vectors."]
embeddings = get_embeddings_azure(texts, api_key, endpoint, deployment_name)

if embeddings:
    for i, embed in enumerate(embeddings):
        print(f"Text {i+1}: {texts[i]}")
        print(f"Embedding: {embed[:10]}... (truncated)")  # Display first 10 dimensions for brevity
