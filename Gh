from langchain.embeddings import OpenAIEmbeddings
import os

# Configure Azure OpenAI settings
os.environ["OPENAI_API_TYPE"] = "azure"
os.environ["OPENAI_API_BASE"] = "https://your-proxy.azurewebsites.net/"  # Proxy or Azure endpoint
os.environ["OPENAI_API_KEY"] = "your-api-key"  # API key for the proxy
os.environ["OPENAI_API_VERSION"] = "2023-03-15-preview"  # Ensure this matches your setup

# Initialize OpenAI embeddings with Azure setup
def get_embeddings(texts):
    """
    Fetch embeddings using LangChain's OpenAIEmbeddings class with Azure setup.

    Args:
        texts (list): List of strings to embed.

    Returns:
        list: A list of embedding vectors.
    """
    embeddings = OpenAIEmbeddings(
        deployment="embeddings-ada",  # The name of your model deployment
        model="text-embedding-ada-002"  # Specify the model
    )

    # Get embeddings for all texts
    results = [embeddings.embed_query(text) for text in texts]
    return results

# Example Usage
texts = ["LangChain simplifies OpenAI integrations.", "Azure provides powerful AI capabilities."]
embeddings = get_embeddings(texts)

if embeddings:
    for i, embed in enumerate(embeddings):
        print(f"Text {i+1}: {texts[i]}")
        print(f"Embedding: {embed[:10]}... (truncated)")  # Show the first 10 dimensions
