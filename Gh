from docx import Document

def move_last_row_to_target(doc_path, target_row_index):
    # Load your Word document
    doc = Document(doc_path)

    # Assume we have at least one table
    table = doc.tables[0]  # Get the first table in the document

    # Identify the last row index
    last_row_index = len(table.rows) - 1  # Index of the last row

    if last_row_index >= 0:  # Ensure there is at least one row
        # Insert a new row at the target position
        table.add_row()  # This adds a new row at the end of the table
        new_row = table.rows[-1]  # Get the newly added last row

        # Move data from the last row to the new row
        last_row = table.rows[last_row_index]

        # Copy data from the last row to the new row
        for cell_index, cell in enumerate(last_row.cells):
            new_row.cells[cell_index].text = cell.text  # Copy text

        # Shift down all rows below the target index
        for i in range(len(table.rows) - 2, target_row_index - 1, -1):
            current_row = table.rows[i]
            next_row = table.rows[i + 1]
            # Move current row data to the next row
            for cell_index in range(len(current_row.cells)):
                next_row.cells[cell_index].text = current_row.cells[cell_index].text

            # Clear the current row since its data has been moved
            for cell in current_row.cells:
                cell.text = ""

        # Finally, clear the original last row if needed
        for cell in last_row.cells:
            cell.text = ""

    # Save the modified document
    doc.save("updated_document.docx")
    print("Data moved and rows shifted successfully!")

# Call the function with the document path and target row index
move_last_row_to_target("input_document.docx", 2)  # Change 2 to your desired target row index
