import json
import re

def fix_json_values(json_str):
    def replace_value(match):
        key, value = match.groups()
        # Check if the value is purely numeric (integer or float)
        if re.fullmatch(r"-?\d+(\.\d+)?", value):  
            return f'{key}{value}'  # Keep numbers unquoted
        else:
            return f'{key}"{value}"'  # Quote non-numeric values

    # Regex to match key-value pairs, allowing for numbers and strings
    pattern = r'(".*?"\s*:\s*)([^",}\]]+)'
    json_str_fixed = re.sub(pattern, replace_value, json_str)
    
    return json_str_fixed

# Example input
a = '{"1": "value1", "2": "value2", "third": 123, "fourth": abc, "fifth": 45.67, "sixth": no, "seventh": "already fine"}'

# Fix JSON string
fixed_json_str = fix_json_values(a)

# Load as JSON
try:
    json_data = json.loads(fixed_json_str)
    print(json_data)
except json.JSONDecodeError as e:
    print("JSON decoding error:", e)
