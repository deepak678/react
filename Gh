import pandas as pd
import re

# Sample data
df = pd.DataFrame({
    'raw_text': [
        '"title" : "This is the title", "description" : "This is a "very" messy "quoted" description"',
        '"title" : "Simple title", "description" : "Clean one"',
        '"title" : "Edge title", "description" : "Quote "inside" another "quote""',
        '"title" : "Another one", "description" : "Ends with quote "like this""'
    ]
})

# Robust extractor function
def extract_title_description(text):
    # Title: get first "title" : "..." match
    title_match = re.search(r'"title"\s*:\s*"([^"]*)"', text)
    title = title_match.group(1).strip() if title_match else ""
    
    # Description: split by 'description' and keep everything after
    desc_start = text.find('"description"')
    if desc_start == -1:
        return pd.Series([title, ""])
    
    # Find the first quote after the colon
    desc_colon = text.find(":", desc_start)
    desc_value_start = text.find('"', desc_colon)
    
    # Then find the last quote in the whole string (to include internal quotes)
    desc_value_end = text.rfind('"')
    
    # Extract description safely
    if desc_value_start != -1 and desc_value_end != -1 and desc_value_end > desc_value_start:
        description = text[desc_value_start+1 : desc_value_end].strip()
    else:
        description = ""
    
    return pd.Series([title, description])

# Apply function
df[['title', 'description']] = df['raw_text'].apply(extract_title_description)

# Display result
print(df[['title', 'description']])
