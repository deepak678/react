import pandas as pd
from openpyxl import load_workbook
import re

# Function to extract hyperlinks and text from a cell
def get_hyperlink_text(cell):
    if cell.hyperlink:
        return cell.hyperlink.target, cell.value
    else:
        return None, cell.value

# Load the workbook and select the sheet
file_path = 'your_excel_file.xlsx'
wb = load_workbook(file_path, data_only=True)
sheet = wb.active

# Read the Excel file into a DataFrame
df = pd.read_excel(file_path)

# Create lists to store hyperlinks and text
hyperlinks = []
text_values = []

# Iterate over the DataFrame to extract hyperlinks and text
for row_index, row in df.iterrows():
    row_hyperlinks = []
    row_texts = []
    for col_index in range(len(row)):
        cell = sheet.cell(row=row_index + 2, column=col_index + 1)  # Adjusting for header row
        hyperlink, text = get_hyperlink_text(cell)
        row_hyperlinks.append(hyperlink)
        row_texts.append(text)
    hyperlinks.append(row_hyperlinks)
    text_values.append(row_texts)

# Create DataFrames for hyperlinks and text
hyperlinks_df = pd.DataFrame(hyperlinks, columns=[f'{col}_link' for col in df.columns])
text_df = pd.DataFrame(text_values, columns=df.columns)

# Combine the original DataFrame, text DataFrame, and hyperlinks DataFrame
combined_df = pd.concat([text_df, hyperlinks_df], axis=1)

print(combined_df)




import openpyxl

# Function to find tables by header
def find_tables_by_header(sheet, header):
    tables = []
    for table in sheet.tables.values():
        table_range = table.ref
        start_cell, end_cell = table_range.split(':')
        start_row = sheet[start_cell].row
        end_row = sheet[end_cell].row
        start_col = openpyxl.utils.column_index_from_string(start_cell[:len(start_cell) - len(str(start_row))])
        end_col = openpyxl.utils.column_index_from_string(end_cell[:len(end_cell) - len(str(end_row))])
        
        # Check if header matches the first row in the table
        if sheet.cell(row=start_row, column=start_col).value == header:
            tables.append((table.name, table_range))
    return tables

# Load the workbook and select the sheet
file_path = 'your_excel_file.xlsx'
wb = openpyxl.load_workbook(file_path)
sheet = wb.active

# Define the header to search for
header_to_search = 'Your Header Name'

# Find tables with the specified header and print their ranges
tables_with_header = find_tables_by_header(sheet, header_to_search)
for table_name, table_range in tables_with_header:
    print(f'Table Name: {table_name}, Table Range: {table_range}')


import openpyxl

# Function to find tables by headers
def find_tables_by_headers(sheet, headers):
    tables = []
    max_row = sheet.max_row
    max_col = sheet.max_column

    for row in range(1, max_row + 1):
        for col in range(1, max_col + 1):
            if sheet.cell(row=row, column=col).value in headers:
                start_row = row
                start_col = col

                # Determine the table range by finding the end row and column
                end_row = start_row
                while end_row <= max_row and sheet.cell(row=end_row + 1, column=start_col).value is not None:
                    end_row += 1

                end_col = start_col
                while end_col <= max_col and sheet.cell(row=start_row, column=end_col + 1).value is not None:
                    end_col += 1

                table_range = f"{openpyxl.utils.get_column_letter(start_col)}{start_row}:{openpyxl.utils.get_column_letter(end_col)}{end_row}"
                tables.append((f"Table at {start_col}:{start_row}", table_range))
    return tables

# Load the workbook and select the sheet
file_path = 'your_excel_file.xlsx'
wb = openpyxl.load_workbook(file_path)
sheet = wb['Doc1']  # Specify the sheet name

# Define the list of headers to search for
headers_to_search = ['Header1', 'Header2', 'Header3']  # Replace with your headers

# Find tables with the specified headers and print their ranges
tables_with_headers = find_tables_by_headers(sheet, headers_to_search)
for table_name, table_range in tables_with_headers:
    print(f'Table Name: {table_name}, Table Range: {table_range}')

