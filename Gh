import json
import pandas as pd
import re

def fix_and_extract_json(json_str):
    """Fix unquoted string values in JSON and return the first three values."""
    try:
        # Fix unquoted strings (detect words without quotes after `:`)
        json_str_fixed = re.sub(r'(".*?"\s*:\s*)([a-zA-Z_]+)', r'\1"\2"', json_str)

        # Parse the fixed JSON
        data = json.loads(json_str_fixed)

        # Extract first three values
        values = list(data.values())[:3]

        return values  # Returning list (apply will convert to separate columns)

    except (json.JSONDecodeError, TypeError) as e:
        return json_str  # If parsing fails, return the original string

# Example DataFrame
df = pd.DataFrame({'json_column': [
    '{"1": "value1", "2": "value2", "third": 123, "fourth": abc, "fifth": 45.67}',  # Unquoted string (abc)
    '{"a": "apple", "b": banana, "c": cherry, "d": "date"}',  # Unquoted banana, cherry
    '{"x": 100, "y": 200}',  # Valid JSON
]})

# Apply function and expand into columns
df[['val1', 'val2', 'val3']] = df['json_column'].apply(fix_and_extract_json).apply(pd.Series)

print(df)
