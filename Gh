from docx import Document
from docx.oxml import OxmlElement

def find_table_with_placeholder(doc, placeholder):
    """
    Scans the document and finds the table containing the placeholder.
    Returns the table and the row/column index of the placeholder.
    """
    for table in doc.tables:
        for row_idx, row in enumerate(table.rows):
            for col_idx, cell in enumerate(row.cells):
                if placeholder in cell.text:
                    return table, row_idx, col_idx
    return None, None, None

def add_new_column(table, column_idx):
    """
    Adds a new column to the table by appending a cell to each row.
    """
    for row in table.rows:
        # Add a new cell to the row at the column index by appending a cell
        new_cell = row.cells[-1]._element  # Get the last cell as template
        new_cell_copy = OxmlElement(new_cell.tag)  # Create a new empty cell with the same tag
        row._element.append(new_cell_copy)  # Append the new empty cell

def replace_data_in_table(table, start_row_idx, start_col_idx, data):
    """
    Replaces data in the table starting from the specified row and column index.
    Adds new rows or columns dynamically as necessary.
    """
    for i, row_data in enumerate(data):
        current_row_idx = start_row_idx + i

        # If current row does not exist, add new rows
        if current_row_idx >= len(table.rows):
            table.add_row()  # Add a new row if needed
        current_row = table.rows[current_row_idx]

        # Insert data starting from the placeholder column
        for j, value in enumerate(row_data):
            current_col_idx = start_col_idx + j

            # If the current column index exceeds the number of cells, add new columns
            while current_col_idx >= len(current_row.cells):
                add_new_column(table, current_col_idx)

            # Insert the value into the cell
            current_row.cells[current_col_idx].text = value

# Example Usage:
# Load your Word document
doc = Document("input_document.docx")

# Placeholder to look for
placeholder = "{{add_data}}"

# Data to insert (list of lists)
data = [
    ["Smith", "25", "San Francisco"],
    ["Johnson", "30", "Seattle"]
]

# Step 1: Scan the document to find the table and placeholder location
table, row_idx, col_idx = find_table_with_placeholder(doc, placeholder)

# Step 2: If the table is found, replace the data starting from the placeholder
if table is not None:
    replace_data_in_table(table, row_idx, col_idx, data)

    # Save the modified document
    doc.save("updated_document.docx")
    print("Table updated successfully!")
else:
    print(f"Placeholder '{placeholder}' not found in any table.")
