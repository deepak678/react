from nltk.translate.bleu_score import sentence_bleu
from rouge_score import rouge_scorer

# Input and Output Strings
input_text = "Exercise benefits health by improving immunity and reducing stress."
output_text = "Regular exercise improves health, boosts immunity, and reduces stress."

# BLEU Score Calculation
def calculate_bleu(reference, candidate):
    ref_tokens = reference.split()
    cand_tokens = candidate.split()
    return sentence_bleu([ref_tokens], cand_tokens)

# ROUGE Score Calculation
scorer = rouge_scorer.RougeScorer(['rouge1', 'rouge2', 'rougeL'], use_stemmer=True)

def calculate_rouge(reference, candidate):
    scores = scorer.score(reference, candidate)
    return {k: v.fmeasure for k, v in scores.items()}

# Evaluate
bleu_score = calculate_bleu(input_text, output_text)
rouge_scores = calculate_rouge(input_text, output_text)

# Display Results
print("BLEU Score:", bleu_score)
print("ROUGE Scores:", rouge_scores)
